// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id String @id @unique @default(uuid())

  email            String    @unique
  senha            String
  tokenRefresh     String?
  senhaResetToken  String?
  senhaResetExpira DateTime?
  eAtivo           Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  eVendedor        Boolean           @default(false)
  vendedor         Vendedor?         @relation(fields: [vendedorCodigo], references: [codigo])
  vendedorCodigo   Int?
  catalogosProduto CatalogoProduto[]

  @@map("usuarios")
}

model Vendedor {
  codigo        Int      @id @unique
  nome          String
  nomeGuerra    String
  email         String?
  codGerente    Int?
  codSupervisor Int?
  eAtivo        Boolean  @default(true)
  eGerente      Boolean  @default(false)
  eSupervisor   Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  marcas                       Marca[]
  Usuario                      Usuario[]
  carteiraClienteRepresentante CarteiraClienteRepresentante[]
  vendedorPedido               VendedorPedido[]
  titulo                       Titulo[]

  @@map("vendedores")
}

model Linha {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("linhas")
}

model Colecao {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("colecoes")
}

model Grupo {
  codigo    Int      @id @unique
  descricao String
  ornador   Int?
  eAtivo    Boolean  @default(true)
  eVenda    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subGrupos        SubGrupo[]
  produtos         Produto[]
  bloqueiosCliente BloqueiosCliente[]

  @@map("grupos")
}

model SubGrupo {
  id        String   @id @unique @default(uuid())
  codigo    Int
  descricao String
  eAtivo    Boolean  @default(true)
  eVenda    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  grupo       Grupo     @relation(fields: [codigoGrupo], references: [codigo])
  codigoGrupo Int
  produtos    Produto[]

  regraProdutoConceito RegraProdutoConceito[]

  @@unique([codigo, codigoGrupo])
  @@map("subgrupos")
}

model Marca {
  codigo            Int      @id @unique
  descricao         String
  ornador           Int?
  valorPedidoMinimo Float    @default(0)
  eAtivo            Boolean  @default(true)
  eVenda            Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  produtos               Produto[]
  vendedores             Vendedor[]
  regraCondicaoPagamento RegraCondicaoPagamento[]
  pedido                 Pedido[]
  bloqueiosCliente       BloqueiosCliente[]
  bloqueiosMarca         BloqueiosMarca[]

  @@map("marcas")
}

model BloqueiosMarca {
  id        String   @id @default(uuid())
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  marca       Marca  @relation(fields: [marcaCodigo], references: [codigo])
  marcaCodigo Int
  uf          String
  estado      Estado @relation(fields: [uf], references: [uf])

  @@map("bloqueiosMarca")
}

model Cor {
  codigo    Int      @id @unique
  descricao String
  hex       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos      Produto[]
  RelCorProduto RelCorProduto[]

  @@map("cores")
}

model RelCorProduto {
  id        String @id() @default(uuid())
  cor       Cor    @relation(fields: [corCodigo], references: [codigo])
  corCodigo Int

  produto       Produto? @relation(fields: [codigoProduto], references: [codigo])
  codigoProduto Int?     @unique

  @@map("relCorProdutos")
}

model OrigemProduto {
  codigo    Int      @id @unique
  descricao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produto Produto[]

  @@map("origensProduto")
}

model UnidadeMedida {
  unidade   String   @id @unique
  descricao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produto Produto[]

  @@map("unidadesMedida")
}

model Produto {
  codigo                Int      @id @unique
  codigoAlternativo     String
  referencia            String
  descricao             String
  descricaoComplementar String?
  descricaoAdicional    String?
  precoVenda            Float
  precoVendaEmpresa     Float?
  qtdEmbalagem          Int      @default(0)
  obs                   String?
  ncm                   String?
  eAtivo                Boolean  @default(true)
  possuiFoto            Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  locaisEstoque LocalEstoque[]
  itens         ItemPedido[]
  listaPreco    ListaPreco[]
  ordemCompra   OrdemCompra[]

  corPrimaria         Cor?              @relation(fields: [corPrimariaCodigo], references: [codigo])
  corPrimariaCodigo   Int?
  corSecundaria       RelCorProduto?
  corSecundariaCodigo Int?
  marca               Marca             @relation(fields: [marcaCodigo], references: [codigo])
  marcaCodigo         Int
  colecao             Colecao?          @relation(fields: [colecaoCodigo], references: [codigo])
  colecaoCodigo       Int?
  linha               Linha?            @relation(fields: [linhaCodigo], references: [codigo])
  linhaCodigo         Int?
  grupo               Grupo?            @relation(fields: [grupoCodigo], references: [codigo])
  grupoCodigo         Int?
  genero              Genero?           @relation(fields: [generoCodigo], references: [codigo])
  generoCodigo        Int?
  subGrupo            SubGrupo?         @relation(fields: [subGrupoId], references: [id])
  subGrupoId          String?
  Grade               Grade?            @relation(fields: [gradeCodigo], references: [codigo])
  gradeCodigo         Int?
  origemProduto       OrigemProduto?    @relation(fields: [origemProdutoCodigo], references: [codigo])
  origemProdutoCodigo Int?
  unidade             UnidadeMedida?    @relation(fields: [unidadeMedida], references: [unidade])
  unidadeMedida       String?
  CatalogoProduto     CatalogoProduto[]
  imagens             ProdutoImagem[]

  @@map("produtos")
}

model ProdutoImagem {
  id        String   @id @default(uuid())
  nome      String
  sequencia Int
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@unique([produtoCodigo, nome, sequencia])
  @@map("produtoImagens")
}

model Grade {
  codigo     Int      @id @unique
  descricao  String
  abreviacao String?
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  tamanhos Tamanho[]
  produtos Produto[]

  @@map("grades")
}

model ListaPreco {
  id        String   @id @unique
  codigo    Int
  descricao String
  valor     Float
  eAtivo    Boolean  @default(true)
  eVenda    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@map("listasPreco")
}

model Tamanho {
  descricao String   @id @unique()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Grade       Grade? @relation(fields: [gradeCodigo], references: [codigo])
  gradeCodigo Int?

  @@map("tamanhos")
}

model LocalEstoque {
  id         String    @id @unique @default(uuid())
  periodo    String
  descricao  String
  quantidade Int
  eAtivo     Boolean   @default(true)
  data       DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  periodoEstoque PeriodoEstoque @relation(fields: [periodo], references: [periodo])

  @@unique([periodo, produtoCodigo])
  @@map("locaisEstoque")
}

model PeriodoEstoque {
  periodo   String    @id @unique
  descricao String
  data      DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  pedido           Pedido[]
  LocalEstoque     LocalEstoque[]
  bloqueiosCliente BloqueiosCliente[]

  @@map("periodosEstoque")
}

model Genero {
  codigo    Int      @id @unique
  descricao String
  ornador   Int?
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("generos")
}

model OrdemCompra {
  codigo     String   @id @unique
  periodo    String
  nome       String
  quantidade Int
  situacao   Int
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@map("ordensCompra")
}

model Conceito {
  codigo     Int      @id @unique
  descricao  String
  abreviacao String?
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  regraProdutoConceito RegraProdutoConceito[]
  Cliente              Cliente[]

  @@map("conceitos")
}

model RamoAtividade {
  codigo     Int      @id @unique
  descricao  String
  abreviacao String?
  eAtivo     Boolean  @default(true)
  eVenda     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Cliente Cliente[]

  @@map("ramosAtividade")
}

model RegraProdutoConceito {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subGrupo       SubGrupo @relation(fields: [subGrupoId], references: [id])
  subGrupoId     String
  conceito       Conceito @relation(fields: [conceitoCodigo], references: [codigo])
  conceitoCodigo Int

  @@unique([subGrupoId, conceitoCodigo])
  @@map("regrasProdutoConceito")
}

model ProdutoNaoImportado {
  id     String @id @unique @default(uuid())
  codigo Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("produtosNaoImportado")
}

model Pedido {
  codigo          Int      @id @unique @default(autoincrement())
  dataFaturamento DateTime
  valorTotal      Float
  eRascunho       Boolean  @default(false)
  codigoErp       Int?     @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cliente                 Cliente           @relation(fields: [clienteCodigo], references: [codigo])
  clienteCodigo           Int
  periodoEstoque          PeriodoEstoque    @relation(fields: [periodo], references: [periodo])
  periodo                 String
  condicaoPagamento       CondicaoPagamento @relation(fields: [condicaoPagamentoCodigo], references: [codigo])
  condicaoPagamentoCodigo Int
  tabelaPreco             TabelaPreco       @relation(fields: [tabelaPrecoCodigo], references: [codigo])
  tabelaPrecoCodigo       Int
  situacaoPedido          SituacaoPedido?   @relation(fields: [situacaoPedidoCodigo], references: [codigo])
  situacaoPedidoCodigo    Int?
  marca                   Marca             @relation(fields: [marcaCodigo], references: [codigo])
  marcaCodigo             Int
  localCobranca           LocalCobranca     @relation(fields: [localCobrancaCodigo], references: [codigo])
  localCobrancaCodigo     Int

  itens      ItemPedido[]
  registros  Registro[]
  vendedores VendedorPedido[]

  @@map("pedidos")
}

model SituacaoPedido {
  codigo    Int      @id @unique @default(autoincrement())
  descricao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pedidos Pedido[]

  @@map("situacoesPedido")
}

model VendedorPedido {
  id   String @id @unique @default(uuid())
  // tipo 1 = 'vendedor', 2 = 'preposto'
  tipo Int

  vendedorCodigo Int
  vendedor       Vendedor @relation(fields: [vendedorCodigo], references: [codigo])
  pedidoCodigo   Int
  pedido         Pedido   @relation(fields: [pedidoCodigo], references: [codigo])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("vendedoresPedido")
}

model ItemPedido {
  codigo        String   @id @unique @default(uuid())
  quantidade    Int
  sequencia     Int
  valorUnitario Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  pedido        Pedido  @relation(fields: [pedidoCodigo], references: [codigo])
  pedidoCodigo  Int
  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@unique([pedidoCodigo, produtoCodigo])
  @@map("itensPedido")
}

model Registro {
  id             String   @id @unique @default(uuid())
  requsicao      String
  resposta       String?
  situacaoCodigo Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  pedido       Pedido? @relation(fields: [pedidoCodigo], references: [codigo])
  pedidoCodigo Int?

  @@map("registros")
}

model CatalogoProduto {
  id              String   @id @unique @default(uuid())
  qtdAcessos      Int      @default(0)
  orderBy         String?
  filtro          String?
  isGroupProduct  Boolean  @default(false)
  isStockLocation Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  produto   Produto[]
  usuario   Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId String

  @@map("catalogosProduto")
}

model TokenSso {
  token     String   @id @unique
  createdAt DateTime @default(now())

  @@map("tokensSso")
}

model Cliente {
  codigo           Int     @id @unique
  cnpj             String
  credito          Float   @default(0)
  razaoSocial      String
  nomeFantasia     String
  incricaoEstadual String?
  celular          String?
  email            String?
  email2           String?
  telefone         String?
  telefone2        String?
  eAtivo           Boolean @default(false)

  cidadeIbgeCod Int?
  cidade        String
  bairro        String
  logradouro    String
  numero        String
  complemento   String?
  cep           String

  obs         String?
  obsRestrita String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conceito            Conceito?      @relation(fields: [conceitoCodigo], references: [codigo])
  conceitoCodigo      Int?
  ramoAtividade       RamoAtividade? @relation(fields: [ramoAtividadeCodigo], references: [codigo])
  ramoAtividadeCodigo Int?
  estado              Estado         @relation(fields: [uf], references: [uf])
  uf                  String

  carteiraClienteRepresentante CarteiraClienteRepresentante[]
  pedido                       Pedido[]
  bloqueios                    BloqueiosCliente?
  titulo                       Titulo[]

  @@map("clientes")
}

model BloqueiosCliente {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  marcas          Marca[]
  grupos          Grupo[]
  periodosEstoque PeriodoEstoque[]

  cliente       Cliente @relation(fields: [clienteCodigo], references: [codigo])
  clienteCodigo Int     @unique

  @@map("bloqueiosCliente")
}

model Estado {
  uf        String   @id @unique
  nome      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bloqueiosMarca BloqueiosMarca[]
  cliente        Cliente[]

  @@map("estados")
}

model CarteiraClienteRepresentante {
  id        String   @id @unique @default(uuid())
  tipo      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vendedor       Vendedor @relation(fields: [vendedorCodigo], references: [codigo])
  vendedorCodigo Int
  cliente        Cliente  @relation(fields: [clienteCodigo], references: [codigo])
  clienteCodigo  Int

  @@unique([vendedorCodigo, clienteCodigo])
  @@map("cateirasClieteRepresentante")
}

model TabelaPreco {
  codigo    Int      @id @unique
  descricao String
  eVenda    Boolean  @default(false)
  eAtivo    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pedido                   Pedido[]
  condicaoPagamentoParcela CondicaoPagamentoParcela[]

  @@map("tabelasPreco")
}

model LocalCobranca {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  RegraCondicaoPagamento RegraCondicaoPagamento[]
  pedidos                Pedido[]

  @@map("locaisCobranca")
}

model CondicaoPagamento {
  codigo      Int     @id @unique
  descricao   String
  valorMinimo Float   @default(9999999)
  quantidade  Int
  eAtivo      Boolean @default(false)

  regraCondicaoPagamento RegraCondicaoPagamento[]
  parcelas               CondicaoPagamentoParcela[]
  pedido                 Pedido[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("condicoesPagamento")
}

model CondicaoPagamentoParcela {
  id        String   @id @unique @default(uuid())
  sequencia Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  condicaoPagamentoCodigo Int
  condicaoPagamento       CondicaoPagamento @relation(fields: [condicaoPagamentoCodigo], references: [codigo])
  tabelaPrecoCodigo       Int
  tabelaPreco             TabelaPreco       @relation(fields: [tabelaPrecoCodigo], references: [codigo])

  @@unique([condicaoPagamentoCodigo, sequencia, tabelaPrecoCodigo])
  @@map("condicaoPagamentoParcelas")
}

model RegraCondicaoPagamento {
  id               String  @id @unique @default(uuid())
  valorMinimo      Float   @default(9999999)
  listaPrecoCodigo Int
  eAtivo           Boolean @default(false)

  marcaCodigo             Int
  marca                   Marca             @relation(fields: [marcaCodigo], references: [codigo])
  condicaoPagamentoCodigo Int
  condicaoPagamento       CondicaoPagamento @relation(fields: [condicaoPagamentoCodigo], references: [codigo])
  localCobrancaCodigo     Int?
  localCobranca           LocalCobranca?    @relation(fields: [localCobrancaCodigo], references: [codigo])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([listaPrecoCodigo, condicaoPagamentoCodigo, marcaCodigo])
  @@map("regrasCondicaoPagamento")
}

model Titulo {
  id              String    @id @default(uuid())
  numeroDocumento Int
  valor           Float
  desdobramento   Int
  parcela         Int
  nossoNumero     String?
  dataVencimento  DateTime
  dataPagamento   DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  vendedor       Vendedor? @relation(fields: [vendedorCodigo], references: [codigo])
  vendedorCodigo Int?
  cliente        Cliente   @relation(fields: [clienteCodigo], references: [codigo])
  clienteCodigo  Int

  @@unique([numeroDocumento, desdobramento, clienteCodigo])
  @@map("titulos")
}
