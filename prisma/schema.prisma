// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id String @id @unique @default(uuid())

  email            String    @unique
  senha            String
  tokenRefresh     String?
  senhaResetToken  String?
  senhaResetExpira DateTime?
  eAtivo           Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  eVendedor      Boolean   @default(false)
  vendedor       Vendedor? @relation(fields: [vendedorCodigo], references: [codigo])
  vendedorCodigo Int?

  @@map("usuarios")
}

model Vendedor {
  codigo        Int      @id @unique
  nome          String
  nomeGuerra    String
  email         String
  codGerente    Int?
  codSupervisor Int?
  eAtivo        Boolean  @default(true)
  eGerente      Boolean  @default(false)
  eSupervisor   Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  marcas  Marca[]
  Usuario Usuario[]

  @@map("vendedores")
}

model Linha {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("linhas")
}

model Colecao {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("colecoes")
}

model Grupo {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subGrupos SubGrupo[]
  produtos  Produto[]

  @@map("grupos")
}

model SubGrupo {
  id        String   @id @unique @default(uuid())
  codigo    Int
  descricao String
  eAtivo    Boolean  @default(true)
  eVenda    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  grupo       Grupo     @relation(fields: [codigoGrupo], references: [codigo])
  codigoGrupo Int
  produtos    Produto[]

  regraProdutoConceito RegraProdutoConceito[]

  @@unique([codigo, codigoGrupo])
  @@map("subgrupos")
}

model Marca {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos   Produto[]
  vendedores Vendedor[]

  @@map("marcas")
}

model Cor {
  codigo    Int      @id @unique
  descricao String
  hex       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos      Produto[]
  RelCorProduto RelCorProduto[]

  @@map("cores")
}

model RelCorProduto {
  id String @id() @default(uuid())

  cor       Cor @relation(fields: [corCodigo], references: [codigo])
  corCodigo Int

  produto       Produto? @relation(fields: [codigoProduto], references: [codigo])
  codigoProduto Int?     @unique

  @@map("relCorProdutos")
}

model Produto {
  codigo                Int      @id @unique
  codigoAlternativo     String
  referencia            String
  descricao             String
  descricaoComplementar String?
  descricaoAdicional    String?
  precoVenda            Float
  precoVendaEmpresa     Float?
  unidade               String
  eAtivo                Boolean  @default(true)
  possuiFoto            Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  locaisEstoque LocalEstoque[]
  itens         ItemPedido[]

  corPrimaria         Cor?           @relation(fields: [corPrimariaCodigo], references: [codigo])
  corPrimariaCodigo   Int?
  corSecundaria       RelCorProduto?
  corSecundariaCodigo Int?
  marca               Marca          @relation(fields: [marcaCodigo], references: [codigo])
  marcaCodigo         Int
  colecao             Colecao?       @relation(fields: [colecaoCodigo], references: [codigo])
  colecaoCodigo       Int?
  linha               Linha?         @relation(fields: [linhaCodigo], references: [codigo])
  linhaCodigo         Int?
  grupo               Grupo?         @relation(fields: [grupoCodigo], references: [codigo])
  grupoCodigo         Int?
  genero              Genero?        @relation(fields: [generoCodigo], references: [codigo])
  generoCodigo        Int?
  subGrupo            SubGrupo?      @relation(fields: [subGrupoId], references: [id])
  subGrupoId          String?
  Grade               Grade?         @relation(fields: [gradeCodigo], references: [codigo])
  gradeCodigo         Int?
  ordemCompra         OrdemCompra[]

  @@map("produtos")
}

model Grade {
  codigo     Int      @id @unique
  descricao  String
  abreviacao String?
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  tamanhos Tamanho[]
  produtos Produto[]

  @@map("grades")
}

model Tamanho {
  descricao String   @id @unique()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Grade       Grade? @relation(fields: [gradeCodigo], references: [codigo])
  gradeCodigo Int?

  @@map("Tamanhos")
}

model LocalEstoque {
  id         String   @id @unique @default(uuid())
  periodo    String
  descricao  String
  quantidade Int
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@unique([periodo, produtoCodigo])
  @@map("locaisEstoque")
}

model Genero {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("generos")
}

model OrdemCompra {
  codigo     String   @id @unique
  periodo    String
  nome       String
  quantidade Int
  situacao   Int
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@map("ordensCompra")
}

model Conceito {
  codigo     Int      @id @unique
  descricao  String
  abreviacao String?
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  regraProdutoConceito RegraProdutoConceito[]

  @@map("conceitos")
}

model RegraProdutoConceito {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subGrupo       SubGrupo @relation(fields: [subGrupoId], references: [id])
  subGrupoId     String
  conceito       Conceito @relation(fields: [conceitoCodigo], references: [codigo])
  conceitoCodigo Int

  @@unique([subGrupoId, conceitoCodigo])
  @@map("regrasProdutoConceito")
}

model Pedido {
  codigo          Int      @id @unique
  dataFaturamento DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  itens ItemPedido[]

  @@map("pedidos")
}

model ItemPedido {
  codigo       String   @id @unique
  quantidade   Int
  valorUnitaro Float
  valorTotal   Float
  situacao     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  pedido        Pedido?  @relation(fields: [pedidoCodigo], references: [codigo])
  pedidoCodigo  Int?
  produto       Produto? @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int?

  @@map("itensPedido")
}
