// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id String @id @unique @default(uuid())

  email        String   @unique
  senha        String
  tokenRefresh String?
  eAtivo       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  eVendedor Boolean    @default(false)
  vendedor  Vendedor[]

  @@map("usuarios")
}

model Vendedor {
  codigo        Int      @id @unique
  nome          String
  nomeGuerra    String
  email         String
  codGerente    Int?
  codSupervisor Int?
  eAtivo        Boolean  @default(true)
  eGerente      Boolean  @default(false)
  eSupervisor   Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  marcas    Marca[]
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId String?

  @@map("vendedores")
}

model Linha {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("linhas")
}

model Colecao {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("colecoes")
}

model Grupo {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subGrupos SubGrupo[]
  produtos  Produto[]

  @@map("grupos")
}

model SubGrupo {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  grupo       Grupo     @relation(fields: [codigoGrupo], references: [codigo])
  codigoGrupo Int
  produtos    Produto[]

  @@map("subgrupos")
}

model Marca {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos   Produto[]
  vendedores Vendedor[]

  @@map("marcas")
}

model Cor {
  codigo    Int      @id @unique
  descricao String
  hex       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos      Produto[]
  RelCorProduto RelCorProduto[]

  @@map("cores")
}

model RelCorProduto {
  id String @id() @default(uuid())

  cor       Cor @relation(fields: [corCodigo], references: [codigo])
  corCodigo Int

  produto       Produto? @relation(fields: [codigoProduto], references: [codigo])
  codigoProduto Int?     @unique

  @@map("relCorProdutos")
}

model Produto {
  codigo                Int      @id @unique
  codigoAlternativo     String
  referencia            String
  descricao             String
  descricaoComplementar String?
  descricaoAdicional    String?
  precoVenda            Float
  unidade               String
  eAtivo                Boolean  @default(true)
  possuiFoto            Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  locaisEstoque LocalEstoque[]

  corPrimaria         Cor?           @relation(fields: [corPrimariaCodigo], references: [codigo])
  corPrimariaCodigo   Int?
  corSecundaria       RelCorProduto?
  corSecundariaCodigo Int?
  marca               Marca          @relation(fields: [marcaCodigo], references: [codigo])
  marcaCodigo         Int
  colecao             Colecao?       @relation(fields: [colecaoCodigo], references: [codigo])
  colecaoCodigo       Int?
  linha               Linha?         @relation(fields: [linhaCodigo], references: [codigo])
  linhaCodigo         Int?
  grupo               Grupo?         @relation(fields: [grupoCodigo], references: [codigo])
  grupoCodigo         Int?
  subGrupo            SubGrupo?      @relation(fields: [subgrupoCodigo], references: [codigo])
  subgrupoCodigo      Int?
  genero              Genero?        @relation(fields: [generoCodigo], references: [codigo])
  generoCodigo        Int?

  @@map("produtos")
}

model LocalEstoque {
  id         String   @id @unique @default(uuid())
  periodo    String
  descricao  String
  quantidade Int
  eAtivo     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Produto       Produto @relation(fields: [produtoCodigo], references: [codigo])
  produtoCodigo Int

  @@map("locaisEstoque")
}

model Genero {
  codigo    Int      @id @unique
  descricao String
  eAtivo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produto[]

  @@map("generos")
}
